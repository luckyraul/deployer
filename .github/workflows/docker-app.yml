name: Deployer App

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - 'v3'
          - 'v4'
    steps:
      - uses: actions/checkout@v2
      - name: Build Image V3
        run: docker build -t mygento/deployer:${{ matrix.version }} -f AppV3.Dockerfile .
        if: matrix.version == 'v3'
      - name: Build Image V4
        run: docker build -t mygento/deployer:${{ matrix.version }} -f AppV4.Dockerfile .
        if: matrix.version == 'v4'
      - name: Test php
        run: docker run --rm mygento/deployer:${{ matrix.version }} php -v
      - name: Test node
        run: docker run --rm mygento/deployer:${{ matrix.version }} node -v
      - name: Test npm
        run: docker run --rm mygento/deployer:${{ matrix.version }} npm -v
      - name: Test yarn
        run: docker run --rm mygento/deployer:${{ matrix.version }} yarn -v
      - name: Test composer
        run: docker run --rm mygento/deployer:${{ matrix.version }} composer -V
      - name: Test Composer Config
        run: docker run --rm mygento/deployer:${{ matrix.version }} composer config --list --global
      - name: Test Vault
        run: docker run --rm mygento/deployer:${{ matrix.version }} vault -v
      - name: Test Waypoint
        run: docker run --rm mygento/deployer:${{ matrix.version }} waypoint -v
      - name: Test Levant
        run: docker run --rm mygento/deployer:${{ matrix.version }} levant -v
      - name: Test Nomad
        run: docker run --rm mygento/deployer:${{ matrix.version }} nomad -v
      - name: Test Nomad Pack
        run: docker run --rm mygento/deployer:${{ matrix.version }} nomad-pack version
      - name: Test Deployer
        run: docker run --rm mygento/deployer:${{ matrix.version }} deployer -V
      - name: Test Gomplate
        run: docker run --rm mygento/deployer:${{ matrix.version }} gomplate -v

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Push image
        run: |
          export IMAGE_NAME=mygento/deployer:${{ matrix.version }}
          export IMAGE_ID=ghcr.io/luckyraul/deployer:${{ matrix.version }}

          # Change all uppercase to lowercase
          export IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo $IMAGE_ID

          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID
      - name: Push image Mygento
        run: |
          export IMAGE_NAME=mygento/deployer:${{ matrix.version }}
          export IMAGE_ID=ghcr.io/mygento/deployer:${{ matrix.version }}

          # Change all uppercase to lowercase
          export IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo $IMAGE_ID

          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID
  post_build:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Delete untagged ghcr LR
        uses: Chizkiyahu/delete-untagged-ghcr-action@v2
        with:
          token: ${{ secrets.CR_PAT }}
          repository_owner: ${{ github.repository_owner }}
          owner_type: user
          package_name: deployer
      - name: Delete untagged ghcr Mygento
        uses: Chizkiyahu/delete-untagged-ghcr-action@v2
        with:
          token: ${{ secrets.CR_PAT }}
          repository_owner: mygento
          owner_type: org
          package_name: deployer
